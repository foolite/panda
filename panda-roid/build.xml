<?xml version="1.0" encoding="UTF-8"?>
<project name="panda-roid" default="usage" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant" xmlns:artifact="antlib:org.apache.maven.artifact.ant">	
	<property file="build.properties" />
	<property file="ant.properties" />
	<property file="local.properties" />
	<property environment="env" />
	<condition property="sdk.dir" value="${env.ANDROID_HOME}">
		<isset property="env.ANDROID_HOME" />
	</condition>

	<!-- version -->
	<import file="../ant/panda-version.xml"/>
	
	<path id="dep.cp">
		<pathelement path="${out.dir}/classes"/>
		<fileset dir="${sdk.dir}/platforms/android-19">
			<include name="android.jar"/>
		</fileset>
		<pathelement path="../panda-core/out/classes"/>
		<fileset dir="libs">
			<include name="*.jar"/>
		</fileset>
	</path>

	<!-- usage -->
	<target name="usage">
		<echo><![CDATA[
${prj.name}-${VERSION} build file
-----------------------------------

Available targets are:

clean             --> Delete everything in the output directory
prepare           --> Prepare source
build             --> Build the project
dist              --> Distribute project as a jar file (jar)
jar               --> Make the project as a jar file
jardoc            --> Compress java documents to a jar file
jarsrc            --> Compress source files to a jar file
javadoc           --> Generate java documents
ivy-clean         --> Clean the cache
ivy-resolve       --> Retreive dependencies
release           --> Release the project
mvn-pom           --> Generate pom.xml
mvn-local-deploy  --> Deploy release version to local maven repository
mvn-oss-deploy    --> Deploy snapshot version to maven snapshot repository
mvn-oss-stage     --> Deploy release version to maven staging repository
]]>
		</echo>
	</target>

	<!-- ivy -->
	<target name="ivy-resolve" description="ivy --> retreive dependencies">
		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="libs"/>
		</delete>
		<ivy:retrieve conf="run" pattern="libs/[artifact](-[classifier]).[ext]"/>
	</target>

	<target name="ivy-clean" description="ivy --> clean the cache">
		<ivy:cleancache />
	</target>
	
	<!-- build -->
	<target name="clean" description="Delete everything in the output directory">
		<delete dir="${out.dir}"/>
	</target>

	<target name="prepare" description="Prepare source">
		<mkdir dir="${out.dir}"/>
		<copy todir="libs" preservelastmodified="true" overwrite="true" force="true" failonerror="false">
			<fileset dir="../panda-core/out">
				<include name="panda-core-*.jar"/>
			</fileset>
		</copy>
	</target>

	<target name="build" depends="clean, prepare" description="Build the project">
		<ant antfile="build-sdk.xml" target="release"/>
		<antcall target="javadoc"/>
		<delete failonerror="false">
			<fileset dir="libs">
				<include name="panda-core-*.jar"/>
			</fileset>
		</delete>
	</target>

	<!-- dist -->
	<target name="javadoc" description="Generate java documents">
		<delete includeemptydirs="true">
			<fileset dir="${out.dir}">
				<include name="javadoc/**"/>
			</fileset>
		</delete>
		<javadoc 
			sourcepath="${source.dir}" destdir="${out.dir}/javadoc"
			encoding="UTF-8" docencoding="UTF-8" charset="UTF-8" locale="en_US"
			use="true" splitindex="true"
			windowTitle="${prj.title} ${prj.version} API"
			doctitle="${prj.title} ${prj.version} API"
			footer="&lt;a href=&quot;${prj.url}&quot;&gt;${prj.url}&lt;/a&gt;"
		>
			<classpath refid="dep.cp"/>
		</javadoc>
	</target>

	<target name="jardoc" description="Compress java documents to a jar file">
		<delete includeemptydirs="true">
			<fileset dir="${out.dir}">
				<include name="*-javadoc.jar"/>
			</fileset>
		</delete>
		<jar destfile="${out.dir}/${prj.name}-${VERSION}-javadoc.jar">
			<manifest>
				<attribute name="Created-By" value="${prj.org}"/>
				<attribute name="Built-By" value="${prj.org}"/>
				<attribute name="Built-Date" value="${TODAY}"/>
				<attribute name="Implementation-Title" value="${prj.title}"/>
				<attribute name="Implementation-Version" value="${VERSION}"/>
				<attribute name="Implementation-Vendor" value="${prj.url}"/>
			</manifest>
			<fileset dir="${out.dir}/javadoc"/>
		</jar>
	</target>

	<target name="jarsrc" description="Compress source files to a jar file">
		<delete>
			<fileset dir="${out.dir}">
				<include name="*-sources.jar"/>
			</fileset>
		</delete>
		<jar destfile="${out.dir}/${prj.name}-${VERSION}-sources.jar">
			<manifest>
				<attribute name="Created-By" value="${prj.org}"/>
				<attribute name="Built-By" value="${prj.org}"/>
				<attribute name="Built-Date" value="${TODAY}"/>
				<attribute name="Implementation-Title" value="${prj.title}"/>
				<attribute name="Implementation-Version" value="${VERSION}"/> 
				<attribute name="Implementation-Vendor" value="${prj.url}"/>
			</manifest>
			<fileset dir="${source.dir}"/>
			<fileset dir="${out.dir}/classes" includes="META-INF/LICENSE"/>
		</jar>
	</target>

	<target name="jar" description="Make project as a jar file">
		<delete>
			<fileset dir="${out.dir}">
				<include name="*.jar"/>
				<exclude name="*-javadoc.jar"/>
				<exclude name="*-sources.jar"/>
			</fileset>
		</delete>
		<copy file="LICENSE" todir="${out.dir}/classes/META-INF" overwrite="true" force="true"/>
		<jar destfile="${out.dir}/${prj.name}-${VERSION}.jar">
			<manifest>
				<attribute name="Created-By" value="${prj.org}"/>
				<attribute name="Built-By" value="${prj.org}"/>
				<attribute name="Built-Date" value="${TODAY}"/>
				<attribute name="Implementation-Title" value="${prj.title}"/>
				<attribute name="Implementation-Version" value="${VERSION}"/> 
				<attribute name="Implementation-Vendor" value="${prj.url}"/>
			</manifest>
			<fileset dir="${out.dir}/classes"/>
		</jar>
	</target>

	<target name="dist" depends="jardoc, jarsrc, jar" description="Distribute project as a jar file"/>

	<!-- maven -->
	<import file="../ant/prj-maven.xml"/>

	<!-- release -->
	<target name="release" description="Release the project">
		<antcall target="ivy-resolve"/>
		<antcall target="build"/>
		<antcall target="dist"/>
		<antcall target="mvn-panda-deploy"/>
	</target>
</project>
