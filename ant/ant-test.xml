<?xml version="1.0" encoding="UTF-8"?>
<project name="ant-test">
	<property name="src.dir" value="src"/>
	<property name="out.dir" value="out"/>
	<property name="javac.source" value="1.6"/>
	<property name="javac.target" value="1.6"/>

	<target name="test"
		depends="test-build, test-emma, test-run, test-report"
		description="Test the project (test-build, test-emma, test-run, test-report)"/>

	<!-- path -->
	<path id="test.cp">
		<pathelement path="${out.dir}/classes"/>
		<pathelement path="${out.dir}/test-classes"/>
		<path refid="dep.cp"/>
	</path>

	<path id="junit.cp">
		<pathelement path="${out.dir}/emma-classes"/>
		<pathelement path="${out.dir}/test-classes"/>
		<path refid="dep.cp"/>
	</path>

	<path id="emma.cp">
		<pathelement location="lib/test/emma.jar"/>
		<pathelement location="lib/test/emma_ant.jar"/>
	</path>

	<!-- test -->
	<target name="test-clean" description="Delete test output files in the output directory">
		<delete dir="${out.dir}/test-classes"/>
		<delete dir="${out.dir}/test-javadoc"/>
		<delete dir="${out.dir}/test-report"/>
		<delete dir="${out.dir}/emma-classes"/>
		<delete dir="${out.dir}/emma-report"/>
	</target>

	<target name="test-rescp" description="Copy resource to the classes directory">
		<mkdir dir="${out.dir}/test-classes"/>
		<delete>
			<fileset dir="${out.dir}/test-classes">
				<exclude name="**/*.class"/>
			</fileset>
		</delete>
		<copy todir="${out.dir}/test-classes" preservelastmodified="true">
			<fileset dir="${src.dir}/test/java">
				<exclude name="**/*.java"/>
			</fileset>
			<fileset dir="${src.dir}/test/resources" erroronmissingdir="false">
				<include name="**/*"/>
			</fileset>
		</copy>
	</target>

	<target name="test-dir-chk">
		<available file="${dir}" type="dir" property="dir.exists"/>
	</target>
	<target name="test-n2a-do" depends="test-dir-chk" if="dir.exists">
		<native2ascii src="${dir}" dest="${out.dir}/test-classes" encoding="UTF-8" includes="**/*_*.properties"/>
	</target>
	<target name="test-n2a" description="Convert test native properties to ascii properties">
		<delete>
			<fileset dir="${out.dir}/test-classes">
				<include name="**/*_*.properties"/>
			</fileset>
		</delete>
		<antcall target="test-n2a-do">
			<param name="dir" value="${src.dir}/test/resources"/>
		</antcall>
	</target>

	<target name="test-emma" description="EMMA instruments classes">
		<taskdef resource="emma_ant.properties" classpathref="emma.cp"/>
		
		<!-- EMMA instr class output directory (it is important to create this property only when EMMA is enabled) -->
		<mkdir dir="${out.dir}/emma-classes"/>

		<copy todir="${out.dir}/emma-classes" preservelastmodified="true">
			<fileset dir="${out.dir}/classes"/>
		</copy>

		<!-- Instrument the classes, this takes the normal classes, and makes instrumented classes instead -->
		<!-- Note that EMMA takes regular ANT path elements as instrumentation input, which is exceedingly convenient -->
		<emma>
			<instr instrpath="${out.dir}/emma-classes"
				 metadatafile="${out.dir}/emma-report/metadata.emma"
				 merge="true"
				 mode="overwrite"
			/>
		</emma>
	</target>

	<target name="test-javac" description="Compile test source java files">
		<mkdir dir="${out.dir}/test-classes"/>
		<javac destdir="${out.dir}/test-classes" encoding="UTF-8" source="${javac.source}" target="${javac.target}" debug="true" includeAntRuntime="false">
			<src path="${src.dir}/test/java"/>
			<classpath refid="test.cp"/>
		</javac>
	</target>

	<target name="test-build"
		depends="test-clean, test-rescp, test-n2a, test-javac"
		description="Build the test suite of project"/>

	<target name="test-run" description="Run all junit test case">
		<mkdir dir="${out.dir}/test-report"/>

		<junit printsummary="yes" haltonfailure="no" fork="true" forkmode="once">
			<jvmarg value="-Demma.coverage.out.file=out/emma-report/coverage.emma"/>
			<jvmarg value="-Demma.coverage.out.merge=false"/>
			<classpath refid="junit.cp"/>
			<batchtest fork="yes" todir="${out.dir}/test-report">
				<formatter type="xml"/>
				<fileset dir="${src.dir}/test/java">
					<include name="**/*Test.java"/>
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="test-report" description="Build the test report">
		<junitreport todir="${out.dir}/test-report">
			<fileset dir="${out.dir}/test-report">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="${out.dir}/test-report"/>
		</junitreport>

		<emma>
			<report
				sort="+name,+class,+method,+block"
				metrics="method:70,block:80,line:80,class:100"
			>
				<sourcepath>
					<fileset dir="${src.dir}/main/java"/>
					<fileset dir="${src.dir}/gen/java" erroronmissingdir="false"/>
				</sourcepath>
				
				<!-- collect all EMMA data dumps (metadata and runtime)
					 [this can be done via nested <fileset> fileset elements
					 or <file> elements pointing to a single file]:
				-->
				<fileset dir="${out.dir}/emma-report" >
					<include name="*.emma"/>
				</fileset>

				<!-- for every type of report desired, configure a nested
					 element; various report parameters
					 can be inherited from the parent <report>
					 and individually overridden for each report type:
				-->
				<txt outfile="${out.dir}/emma-report/coverage.txt"
					depth="package"
					columns="class,method,block,line,name"
				/>
				<xml outfile="${out.dir}/emma-report/coverage.xml"
					depth="package"
				/>
				<html outfile="${out.dir}/emma-report/coverage.html"
					depth="method"
					columns="name,class,method,block,line"
				/>
			</report>
		</emma>
	</target>

	<target name="test-javadoc" description="Generate test java documents">
		<delete dir="${out.dir}/test-javadoc"/>
		<javadoc
			sourcepath="${src.dir}/test/java" destdir="${out.dir}/test-javadoc"
			encoding="UTF-8" docencoding="UTF-8" charset="UTF-8" locale="en_US"
			use="true" splitindex="true"
			windowTitle="${prj.title} ${VERSION} Test API"
			doctitle="${prj.title} ${VERSION} Test API"
			footer="&lt;a href=&quot;http://${prj.url}&quot;&gt;${prj.url}&lt;/a&gt;"
		>
			<classpath refid="test.cp"/>
		</javadoc>
	</target>
</project>
