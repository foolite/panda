<?xml version="1.0" encoding="UTF-8"?>
<project name="prj-version">
	<!-- get prj.version -->
	<property name="ver.src" value=".project"/>
	<loadfile srcFile="${ver.src}" property="prj.version" encoding="UTF-8" quiet="true" failonerror="false">
		<filterchain>
			<striplinebreaks/>
			<linecontains>
				<contains value="VERSION"/>
			</linecontains>
			<tokenfilter>
				<replaceregex pattern="(.*)&quot;(.*)&quot;.*" replace="\2"/>
			</tokenfilter>
		</filterchain>
	</loadfile>
	
	<!-- get revision -->
	<script language="javascript">
		var ver = project.getProperty("VERSION");
		if (ver == null) {
			var prjs = project.getProperty("prj.deps");
			if (prjs == null) {
				prjs = ".";
			}
			else {
				prjs += ";.";
			}
			prjs = prjs.toString().split(';');

			function run(cmd) {
				var is = null;
				try {
					var p = java.lang.Runtime.getRuntime().exec(cmd);
					is = p.getInputStream();
					var br = new java.io.BufferedReader(new java.io.InputStreamReader(is));
					var o = "";
					var s;
					while ((s = br.readLine()) != null) {
						o += s.trim();
					}
					return o;
				}
				catch (e) {
					java.lang.System.err.println(e);
					return "";
				}
				finally {
					if (is != null) {
						is.close();
					}
				}
			}
			
			var rev = "";
			for (var i = 0; i &lt; prjs.length; i++) {
				var p = prjs[i];
				var r = "";
				var svn = new java.io.File(p + "/.svn");
				if (svn.exists()) {
					var si = run("svn info --xml " + p);
					if (si != "") {
						var b = si.indexOf("revision=\"") + 10;
						var e = si.indexOf("\"", b);
						r = si.substring(b, e);
					}
				}
				else {
					var git = new java.io.File((new java.io.File(p)).getAbsolutePath() + "/.git");
					while (git != null &amp;&amp; !git.exists()) {
						git = git.getParentFile().getParentFile();
						if (git != null) {
							git = new java.io.File(git, ".git");
						}
					}
					if (git != null) {
						var s = run("git --git-dir=" + git.getPath() + " rev-list --count HEAD");
						if (s != "") {
							r = s;
						}
					}
				}
				if (r != "") {
					if (rev != "") {
						rev += "-";
					}
					rev += r;
				}
			}

			if (rev == "") {
				rev = "0";
			}
			project.setProperty("REVISION", rev);
			
			ver = project.getProperty("prj.version") + "." + rev;
			project.setProperty("VERSION", ver);

			gver = java.util.regex.Pattern.compile("\\.").matcher(ver.toString()).replaceAll("-");
			project.setProperty("GVERSION", gver);
		}
	</script>
</project>
